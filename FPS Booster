repeat wait()until game:IsLoaded()local a,b,c,d,e,f,g={Enabled=false},workspace:WaitForChild"Terrain",game:GetService"Lighting",{},{},getgenv().sethiddenproperty,false;local h=getgenv().gethiddenproperty and getgenv().gethiddenproperty(b,"Decoration")function a:DontChange(i,j)e[i]=j end;function a:LockProperty(i,j,k)if e[i]==j then return end;d[i.ClassName]=d[i.ClassName]or{}d[i.ClassName]=d[i.ClassName]or{}d[i.ClassName][i]=d[i.ClassName][i]or{}d[i.ClassName][i][j]={Value=k,OldValue=i[j]}i:GetPropertyChangedSignal(j):Connect(function()if i[j]~=k and(typeof(i[j])~="EnumItem"or i[j].Name~=k)then d[i.ClassName][i][j].OldValue=i[j]end;if a.Enabled then i[j]=k end end)if a.Enabled then i[j]=k end end;function a:RemoveObj(i)local l=d[i.ClassName][i]or{}d[i.ClassName][i]=nil;for j,m in next,l do i[j]=m.OldValue end end;function a:Toggle(n)a.Enabled=n end;LooP(function()local o=a.Enabled;if g~=o then if f and h then f(b,"Decoration",not o)end;if o then if a.Check then for p,q in next,d do for i,r in next,q do for j,m in next,r do i[j]=m.Value end end end else a.Check=function(s,t)if not t then task.wait()end;if s:IsA"BasePart"then a:LockProperty(s,"Material","Plastic")a:LockProperty(s,"Reflectance",0)elseif s:IsA"ForceField"or s:IsA"Explosion"then a:LockProperty(s,"Visible",false)elseif s:IsA"Atmosphere"then a:LockProperty(s,"Density",0)elseif s:IsA"Fire"or s:IsA"ParticleEmitter"or s:IsA"Trail"or s:IsA"SpotLight"or s:IsA"PointLight"or s:IsA"Smoke"or s:IsA"Sparkles"or s:IsA"Beam"or string.find(s.ClassName,"Effect")then a:LockProperty(s,"Enabled",false)end end;do workspace.DescendantAdded:Connect(a.Check)for u,s in next,workspace:GetDescendants()do a.Check(s,true)end;do a:LockProperty(b,"WaterWaveSize",0)a:LockProperty(b,"WaterWaveSpeed",0)a:LockProperty(b,"WaterReflectance",0)a:LockProperty(b,"WaterTransparency",0)end end;do c.ChildAdded:Connect(a.Check)for u,s in next,c:GetChildren()do a.Check(s,true)end;a:LockProperty(c,"GlobalShadows",false)a:LockProperty(c,"FogEnd",9e9)end end else for p,q in next,d do for i,r in next,q do for j,m in next,r do i[j]=m.OldValue end end end end;g=o end end)return a
